
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;
using ns = alby.pantheon.codegen;

namespace alby.pantheon.codegen.storedProcedure
{
	public partial class StoredProcedureFactory : acr.StoredProcedureFactoryBase< ns.database.pantheonDatabaseSingletonHelper, ns.database.pantheonDatabase >
	{
		public int SolicitorWebServiceAdd
		(
			sds.SqlConnection connˡ, 
			Guid? SolicitorWebServiceGuid, 
			string Name, 
			string DevUrl, 
			string IntgUrl, 
			string TestUrl, 
			string StagUrl, 
			string ProdUrl, 
			string DRUrl, 
			string DevCertFilename, 
			string IntgCertFilename, 
			string TestCertFilename, 
			string StagCertFilename, 
			string ProdCertFilename, 
			string DRCertFilename, 
			string UpdateUserCode, 
			DateTime? UpdateDateTime, 
			ref byte[] RowTimestamp, 
			sds.SqlTransaction tranˡ = null
		)
		{
			const string schemaˡ = "dbo" ; 
			const string spˡ = "SolicitorWebServiceAdd" ; 
			 
			scg.List<sds.SqlParameter> parametersˡ = new scg.List<sds.SqlParameter>() ;
			sds.SqlParameter paramˡSolicitorWebServiceGuid = base.AddParameterˡ( parametersˡ, "@SolicitorWebServiceGuid", SolicitorWebServiceGuid, sd.SqlDbType.UniqueIdentifier, true, null, null, null ) ; 
			sds.SqlParameter paramˡName = base.AddParameterˡ( parametersˡ, "@Name", Name, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡDevUrl = base.AddParameterˡ( parametersˡ, "@DevUrl", DevUrl, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡIntgUrl = base.AddParameterˡ( parametersˡ, "@IntgUrl", IntgUrl, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡTestUrl = base.AddParameterˡ( parametersˡ, "@TestUrl", TestUrl, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡStagUrl = base.AddParameterˡ( parametersˡ, "@StagUrl", StagUrl, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡProdUrl = base.AddParameterˡ( parametersˡ, "@ProdUrl", ProdUrl, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡDRUrl = base.AddParameterˡ( parametersˡ, "@DRUrl", DRUrl, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡDevCertFilename = base.AddParameterˡ( parametersˡ, "@DevCertFilename", DevCertFilename, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡIntgCertFilename = base.AddParameterˡ( parametersˡ, "@IntgCertFilename", IntgCertFilename, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡTestCertFilename = base.AddParameterˡ( parametersˡ, "@TestCertFilename", TestCertFilename, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡStagCertFilename = base.AddParameterˡ( parametersˡ, "@StagCertFilename", StagCertFilename, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡProdCertFilename = base.AddParameterˡ( parametersˡ, "@ProdCertFilename", ProdCertFilename, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡDRCertFilename = base.AddParameterˡ( parametersˡ, "@DRCertFilename", DRCertFilename, sd.SqlDbType.NVarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡUpdateUserCode = base.AddParameterˡ( parametersˡ, "@UpdateUserCode", UpdateUserCode, sd.SqlDbType.VarChar, true, 50, null, null ) ; 
			sds.SqlParameter paramˡUpdateDateTime = base.AddParameterˡ( parametersˡ, "@UpdateDateTime", UpdateDateTime, sd.SqlDbType.DateTime, true, null, null, null ) ; 
			sds.SqlParameter paramˡRowTimestamp = base.AddParameterˡ( parametersˡ, "@RowTimestamp", RowTimestamp, sd.SqlDbType.Timestamp, false, null, null, null ) ; 
			sds.SqlParameter paramˡrcˡ = base.AddParameterReturnValueˡ( parametersˡ, "@rcˡ" ) ; 
			 
			sd.DataSet dsˡ = base.Executeˡ( connˡ, tranˡ, schemaˡ, spˡ, parametersˡ ) ;
			 
			RowTimestamp = base.GetParameterValueˡ<byte[]>( paramˡRowTimestamp ) ;
			return base.GetParameterValueˡ<int>( paramˡrcˡ ) ;
		}
	}

}

