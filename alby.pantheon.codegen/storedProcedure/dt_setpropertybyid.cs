
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;
using ns = alby.pantheon.codegen;

namespace alby.pantheon.codegen.storedProcedure
{
	public partial class StoredProcedureFactory : acr.StoredProcedureFactoryBase< ns.database.pantheonDatabaseSingletonHelper, ns.database.pantheonDatabase >
	{
		public int dt_setpropertybyid
		(
			sds.SqlConnection connˡ, 
			int? id, 
			string property, 
			string value, 
			byte[] lvalue, 
			sds.SqlTransaction tranˡ = null
		)
		{
			const string schemaˡ = "dbo" ; 
			const string spˡ = "dt_setpropertybyid" ; 
			 
			scg.List<sds.SqlParameter> parametersˡ = new scg.List<sds.SqlParameter>() ;
			sds.SqlParameter paramˡid = base.AddParameterˡ( parametersˡ, "@id", id, sd.SqlDbType.Int, true, null, 10, 0 ) ; 
			sds.SqlParameter paramˡproperty = base.AddParameterˡ( parametersˡ, "@property", property, sd.SqlDbType.VarChar, true, 64, null, null ) ; 
			sds.SqlParameter paramˡvalue = base.AddParameterˡ( parametersˡ, "@value", value, sd.SqlDbType.VarChar, true, 255, null, null ) ; 
			sds.SqlParameter paramˡlvalue = base.AddParameterˡ( parametersˡ, "@lvalue", lvalue, sd.SqlDbType.Image, true, 2147483647, null, null ) ; 
			sds.SqlParameter paramˡrcˡ = base.AddParameterReturnValueˡ( parametersˡ, "@rcˡ" ) ; 
			 
			sd.DataSet dsˡ = base.Executeˡ( connˡ, tranˡ, schemaˡ, spˡ, parametersˡ ) ;
			 
			return base.GetParameterValueˡ<int>( paramˡrcˡ ) ;
		}
	}

}

