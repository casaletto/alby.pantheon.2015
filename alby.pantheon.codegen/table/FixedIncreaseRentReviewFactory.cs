
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;
using ns = alby.pantheon.codegen;

namespace alby.pantheon.codegen.table
{
	public partial class FixedIncreaseRentReviewFactory : acr.FactoryBase< FixedIncreaseRentReview, ns.database.pantheonDatabaseSingletonHelper, ns.database.pantheonDatabase >
	{
		static FixedIncreaseRentReviewFactory() 
		{
			_assemblyˡ = sr.Assembly.GetExecutingAssembly() ;
			_schemaˡ = "dbo" ;
			_tableˡ = "FixedIncreaseRentReview" ;
			_selectˡ = "select * from {0} t " ;
			_insertˡ = "insert {0} ( [RentReviewID], [RentReviewIncrease], [RentReviewIncreaseText], [Anniversary1], [Anniversary2], [Anniversary3], [Anniversary4], [Anniversary5], [Anniversary6], [Anniversary7], [Anniversary8], [Anniversary9], [UpdateUserCode], [UpdateDateTime] ) values ( @RentReviewID, @RentReviewIncrease, @RentReviewIncreaseText, @Anniversary1, @Anniversary2, @Anniversary3, @Anniversary4, @Anniversary5, @Anniversary6, @Anniversary7, @Anniversary8, @Anniversary9, @UpdateUserCode, @UpdateDateTime ) " ;
			_insertIdentityˡ = "insert {0} ( [RentReviewID], [RentReviewIncrease], [RentReviewIncreaseText], [Anniversary1], [Anniversary2], [Anniversary3], [Anniversary4], [Anniversary5], [Anniversary6], [Anniversary7], [Anniversary8], [Anniversary9], [UpdateUserCode], [UpdateDateTime] ) values ( @RentReviewID, @RentReviewIncrease, @RentReviewIncreaseText, @Anniversary1, @Anniversary2, @Anniversary3, @Anniversary4, @Anniversary5, @Anniversary6, @Anniversary7, @Anniversary8, @Anniversary9, @UpdateUserCode, @UpdateDateTime ) " ;
			_updateˡ = "update {0} set [RentReviewID] = @RentReviewID, [RentReviewIncrease] = @RentReviewIncrease, [RentReviewIncreaseText] = @RentReviewIncreaseText, [Anniversary1] = @Anniversary1, [Anniversary2] = @Anniversary2, [Anniversary3] = @Anniversary3, [Anniversary4] = @Anniversary4, [Anniversary5] = @Anniversary5, [Anniversary6] = @Anniversary6, [Anniversary7] = @Anniversary7, [Anniversary8] = @Anniversary8, [Anniversary9] = @Anniversary9, [UpdateUserCode] = @UpdateUserCode, [UpdateDateTime] = @UpdateDateTime " ;
			_deleteˡ = "delete {0} " ;
			_whereLoadPKˡ = "where [RentReviewID] = @pk_RentReviewID " ;
			_whereSavePKˡ = "where [RentReviewID] = @pk_RentReviewID " ;
		}

		public FixedIncreaseRentReview Saveˡ( sds.SqlConnection connˡ, FixedIncreaseRentReview rowˡ, acr.CodeGenSaveStrategy saveStrategyˡ = acr.CodeGenSaveStrategy.Normal, bool identityProvidedˡ = false, sds.SqlTransaction tranˡ = null )
		{
			scg.List<sds.SqlParameter> parametersˡ = new scg.List<sds.SqlParameter>();
			base.AddParameterˡ( parametersˡ, "@pk_RentReviewID", rowˡ.PrimaryKeyDictionaryˡ[ FixedIncreaseRentReview.column٠RentReviewID ] );
			base.AddParameterˡ( parametersˡ, "@RentReviewID", rowˡ.RentReviewID, sd.SqlDbType.Int );
			base.AddParameterˡ( parametersˡ, "@RentReviewIncrease", rowˡ.RentReviewIncrease, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@RentReviewIncreaseText", rowˡ.RentReviewIncreaseText, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@Anniversary1", rowˡ.Anniversary1, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@Anniversary2", rowˡ.Anniversary2, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@Anniversary3", rowˡ.Anniversary3, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@Anniversary4", rowˡ.Anniversary4, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@Anniversary5", rowˡ.Anniversary5, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@Anniversary6", rowˡ.Anniversary6, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@Anniversary7", rowˡ.Anniversary7, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@Anniversary8", rowˡ.Anniversary8, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@Anniversary9", rowˡ.Anniversary9, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@UpdateUserCode", rowˡ.UpdateUserCode, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@UpdateDateTime", rowˡ.UpdateDateTime, sd.SqlDbType.DateTime );
			base.AddParameterˡ( parametersˡ, "@RowTimestamp", rowˡ.RowTimestamp, sd.SqlDbType.Image );

			int? identityIDˡ = null ;
			object objˡ = null ;
		 
			acr.SaveEnum saveResultˡ ;
		 
			if ( saveStrategyˡ != acr.CodeGenSaveStrategy.Normal )
			{
				saveResultˡ = base.ExecuteForceSaveˡ( rowˡ, connˡ, tranˡ, parametersˡ, saveStrategyˡ, _insertˡ, _insertIdentityˡ, _updateˡ, _deleteˡ, _whereLoadPKˡ, false, identityProvidedˡ, out objˡ ) ;
				if ( objˡ != null )
					identityIDˡ = int.Parse( objˡ.ToString() ) ;
			}
			else
			{
				saveResultˡ = base.ExecuteSaveˡ( rowˡ, connˡ, tranˡ, parametersˡ, _insertˡ, _insertIdentityˡ, _updateˡ, _deleteˡ, _whereSavePKˡ, false, identityProvidedˡ, out objˡ ) ;
				if ( objˡ != null )
					identityIDˡ = int.Parse( objˡ.ToString() ) ;
			}
		 
			if ( saveResultˡ == acr.SaveEnum.Update ) 
				return this.LoadByPrimaryKeyˡ( connˡ, rowˡ.RentReviewID, tranˡ ) ;
			else
			if ( saveResultˡ == acr.SaveEnum.Insert ) 
				return this.LoadByPrimaryKeyˡ( connˡ, rowˡ.RentReviewID, tranˡ ) ;
			else
			if ( saveResultˡ == acr.SaveEnum.Delete )
				return null ;
			else
				return rowˡ ;
		}

		public scg.List<FixedIncreaseRentReview> Saveˡ( sds.SqlConnection connˡ, scg.List<FixedIncreaseRentReview> rowListˡ, acr.CodeGenSaveStrategy saveStrategyˡ = acr.CodeGenSaveStrategy.Normal,  bool identityProvidedˡ = false, sds.SqlTransaction tranˡ = null )
		{
			scg.List<FixedIncreaseRentReview> rowList2ˡ = new scg.List<FixedIncreaseRentReview>();
			foreach( FixedIncreaseRentReview rowˡ in rowListˡ )
			{
				FixedIncreaseRentReview row2ˡ = this.Saveˡ( connˡ, rowˡ, saveStrategyˡ, identityProvidedˡ, tranˡ ) ;
				if ( row2ˡ != null )	rowList2ˡ.Add( row2ˡ ) ;
			}
			return rowList2ˡ ;
		}

		public FixedIncreaseRentReview LoadByPrimaryKeyˡ
		(
			sds.SqlConnection connˡ,
			int? RentReviewID,
			sds.SqlTransaction tranˡ = null
		)
		{
			scg.List<sds.SqlParameter> parametersˡ = new scg.List<sds.SqlParameter>();
			base.AddParameterˡ( parametersˡ, "@pk_RentReviewID", RentReviewID );
			return base.ExecuteQueryReturnOneˡ( connˡ, tranˡ, parametersˡ, _assemblyˡ, _selectˡ, false, _whereLoadPKˡ, false ) ;
		}

		public scg.List<FixedIncreaseRentReview> LoadByForeignKey٠From٠RentReview٠By٠RentReviewID
		(
			sds.SqlConnection connˡ,
			int? RentReviewID,
			int? topNˡ = null,
			scg.List<acr.CodeGenOrderBy> orderByˡ = null,
			sds.SqlTransaction tranˡ = null
		)
		{
			scg.List<sds.SqlParameter> parametersˡ = new scg.List<sds.SqlParameter>();
			base.AddParameterˡ( parametersˡ, "@RentReviewID", RentReviewID );
			string whereˡ = "where [RentReviewID] = @RentReviewID " ; 
			string sqlˡ = "" ; 
			return base.ExecuteQueryˡ( connˡ, tranˡ, parametersˡ, _assemblyˡ, _selectˡ, false, whereˡ, false, topNˡ, orderByˡ, out sqlˡ ) ;
		}

		public scg.List<FixedIncreaseRentReview> Loadˡ
		(
			sds.SqlConnection connˡ,
			int? topNˡ = null,
			scg.List<acr.CodeGenOrderBy> orderByˡ = null,
			sds.SqlTransaction tranˡ = null
		)
		{
			scg.List<sds.SqlParameter> parametersˡ = new scg.List<sds.SqlParameter>();
			string whereˡ = "";
			string sqlˡ = "" ; 
			return base.ExecuteQueryˡ( connˡ, tranˡ, parametersˡ, _assemblyˡ, _selectˡ, false, whereˡ, false, topNˡ, orderByˡ, out sqlˡ ) ;
		}

		public scg.List<FixedIncreaseRentReview> LoadByWhereˡ
		(
			sds.SqlConnection connˡ,
			string whereˡ,
			scg.List<sds.SqlParameter> parametersˡ = null,
			int? topNˡ = null,
			scg.List<acr.CodeGenOrderBy> orderByˡ = null,
			sds.SqlTransaction tranˡ = null
		)
		{
			string sqlˡ = "" ; 
			return base.ExecuteQueryˡ( connˡ, tranˡ, parametersˡ, _assemblyˡ, _selectˡ, false, whereˡ, false, topNˡ, orderByˡ, out sqlˡ ) ;
		}

	}

}

