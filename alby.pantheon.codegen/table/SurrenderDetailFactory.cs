
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;
using ns = alby.pantheon.codegen;

namespace alby.pantheon.codegen.table
{
	public partial class SurrenderDetailFactory : acr.FactoryBase< SurrenderDetail, ns.database.pantheonDatabaseSingletonHelper, ns.database.pantheonDatabase >
	{
		static SurrenderDetailFactory() 
		{
			_assemblyˡ = sr.Assembly.GetExecutingAssembly() ;
			_schemaˡ = "dbo" ;
			_tableˡ = "SurrenderDetail" ;
			_selectˡ = "select * from {0} t " ;
			_insertˡ = "insert {0} ( [SurrenderDetailID], [TenantSolicitorName], [TenantName], [TenantShopNo], [TenantSurrenderApplicable], [TenantSurrenderDate], [TenantSurrenderSumPayableByLessee], [TenantSurrenderSumPayableByLessor], [TenantMakeGoodRequiredIndicator], [TenantLeaseNumber], [TenantLeaseDate], [TenantSendDocsTo], [LesseeSolicitorName], [LesseeName], [LesseeShopNo], [LesseeSurrenderApplicable], [LesseeSurrenderDate], [LesseeSurrenderSumPayableByLessee], [LesseeSurrenderSumPayableByLessor], [LesseeMakeGoodRequiredIndicator], [LesseeLeaseNumber], [LesseeLeaseDate], [LesseeSendDocsTo], [UpdateUserCode], [UpdateDateTime], [TenantTradingName], [LesseeTradingName], [LesseeLiableLegalFeesIndicator] ) values ( @SurrenderDetailID, @TenantSolicitorName, @TenantName, @TenantShopNo, @TenantSurrenderApplicable, @TenantSurrenderDate, @TenantSurrenderSumPayableByLessee, @TenantSurrenderSumPayableByLessor, @TenantMakeGoodRequiredIndicator, @TenantLeaseNumber, @TenantLeaseDate, @TenantSendDocsTo, @LesseeSolicitorName, @LesseeName, @LesseeShopNo, @LesseeSurrenderApplicable, @LesseeSurrenderDate, @LesseeSurrenderSumPayableByLessee, @LesseeSurrenderSumPayableByLessor, @LesseeMakeGoodRequiredIndicator, @LesseeLeaseNumber, @LesseeLeaseDate, @LesseeSendDocsTo, @UpdateUserCode, @UpdateDateTime, @TenantTradingName, @LesseeTradingName, @LesseeLiableLegalFeesIndicator ) " ;
			_insertIdentityˡ = "insert {0} ( [SurrenderDetailID], [TenantSolicitorName], [TenantName], [TenantShopNo], [TenantSurrenderApplicable], [TenantSurrenderDate], [TenantSurrenderSumPayableByLessee], [TenantSurrenderSumPayableByLessor], [TenantMakeGoodRequiredIndicator], [TenantLeaseNumber], [TenantLeaseDate], [TenantSendDocsTo], [LesseeSolicitorName], [LesseeName], [LesseeShopNo], [LesseeSurrenderApplicable], [LesseeSurrenderDate], [LesseeSurrenderSumPayableByLessee], [LesseeSurrenderSumPayableByLessor], [LesseeMakeGoodRequiredIndicator], [LesseeLeaseNumber], [LesseeLeaseDate], [LesseeSendDocsTo], [UpdateUserCode], [UpdateDateTime], [TenantTradingName], [LesseeTradingName], [LesseeLiableLegalFeesIndicator] ) values ( @SurrenderDetailID, @TenantSolicitorName, @TenantName, @TenantShopNo, @TenantSurrenderApplicable, @TenantSurrenderDate, @TenantSurrenderSumPayableByLessee, @TenantSurrenderSumPayableByLessor, @TenantMakeGoodRequiredIndicator, @TenantLeaseNumber, @TenantLeaseDate, @TenantSendDocsTo, @LesseeSolicitorName, @LesseeName, @LesseeShopNo, @LesseeSurrenderApplicable, @LesseeSurrenderDate, @LesseeSurrenderSumPayableByLessee, @LesseeSurrenderSumPayableByLessor, @LesseeMakeGoodRequiredIndicator, @LesseeLeaseNumber, @LesseeLeaseDate, @LesseeSendDocsTo, @UpdateUserCode, @UpdateDateTime, @TenantTradingName, @LesseeTradingName, @LesseeLiableLegalFeesIndicator ) " ;
			_updateˡ = "update {0} set [SurrenderDetailID] = @SurrenderDetailID, [TenantSolicitorName] = @TenantSolicitorName, [TenantName] = @TenantName, [TenantShopNo] = @TenantShopNo, [TenantSurrenderApplicable] = @TenantSurrenderApplicable, [TenantSurrenderDate] = @TenantSurrenderDate, [TenantSurrenderSumPayableByLessee] = @TenantSurrenderSumPayableByLessee, [TenantSurrenderSumPayableByLessor] = @TenantSurrenderSumPayableByLessor, [TenantMakeGoodRequiredIndicator] = @TenantMakeGoodRequiredIndicator, [TenantLeaseNumber] = @TenantLeaseNumber, [TenantLeaseDate] = @TenantLeaseDate, [TenantSendDocsTo] = @TenantSendDocsTo, [LesseeSolicitorName] = @LesseeSolicitorName, [LesseeName] = @LesseeName, [LesseeShopNo] = @LesseeShopNo, [LesseeSurrenderApplicable] = @LesseeSurrenderApplicable, [LesseeSurrenderDate] = @LesseeSurrenderDate, [LesseeSurrenderSumPayableByLessee] = @LesseeSurrenderSumPayableByLessee, [LesseeSurrenderSumPayableByLessor] = @LesseeSurrenderSumPayableByLessor, [LesseeMakeGoodRequiredIndicator] = @LesseeMakeGoodRequiredIndicator, [LesseeLeaseNumber] = @LesseeLeaseNumber, [LesseeLeaseDate] = @LesseeLeaseDate, [LesseeSendDocsTo] = @LesseeSendDocsTo, [UpdateUserCode] = @UpdateUserCode, [UpdateDateTime] = @UpdateDateTime, [TenantTradingName] = @TenantTradingName, [LesseeTradingName] = @LesseeTradingName, [LesseeLiableLegalFeesIndicator] = @LesseeLiableLegalFeesIndicator " ;
			_deleteˡ = "delete {0} " ;
			_whereLoadPKˡ = "where [SurrenderDetailID] = @pk_SurrenderDetailID " ;
			_whereSavePKˡ = "where [SurrenderDetailID] = @pk_SurrenderDetailID " ;
		}

		public SurrenderDetail Saveˡ( sds.SqlConnection connˡ, SurrenderDetail rowˡ, acr.CodeGenSaveStrategy saveStrategyˡ = acr.CodeGenSaveStrategy.Normal, bool identityProvidedˡ = false, sds.SqlTransaction tranˡ = null )
		{
			scg.List<sds.SqlParameter> parametersˡ = new scg.List<sds.SqlParameter>();
			base.AddParameterˡ( parametersˡ, "@pk_SurrenderDetailID", rowˡ.PrimaryKeyDictionaryˡ[ SurrenderDetail.column٠SurrenderDetailID ] );
			base.AddParameterˡ( parametersˡ, "@SurrenderDetailID", rowˡ.SurrenderDetailID, sd.SqlDbType.Int );
			base.AddParameterˡ( parametersˡ, "@TenantSolicitorName", rowˡ.TenantSolicitorName, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@TenantName", rowˡ.TenantName, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@TenantShopNo", rowˡ.TenantShopNo, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@TenantSurrenderApplicable", rowˡ.TenantSurrenderApplicable, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@TenantSurrenderDate", rowˡ.TenantSurrenderDate, sd.SqlDbType.DateTime );
			base.AddParameterˡ( parametersˡ, "@TenantSurrenderSumPayableByLessee", rowˡ.TenantSurrenderSumPayableByLessee, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@TenantSurrenderSumPayableByLessor", rowˡ.TenantSurrenderSumPayableByLessor, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@TenantMakeGoodRequiredIndicator", rowˡ.TenantMakeGoodRequiredIndicator, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@TenantLeaseNumber", rowˡ.TenantLeaseNumber, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@TenantLeaseDate", rowˡ.TenantLeaseDate, sd.SqlDbType.DateTime );
			base.AddParameterˡ( parametersˡ, "@TenantSendDocsTo", rowˡ.TenantSendDocsTo, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@LesseeSolicitorName", rowˡ.LesseeSolicitorName, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@LesseeName", rowˡ.LesseeName, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@LesseeShopNo", rowˡ.LesseeShopNo, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@LesseeSurrenderApplicable", rowˡ.LesseeSurrenderApplicable, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@LesseeSurrenderDate", rowˡ.LesseeSurrenderDate, sd.SqlDbType.DateTime );
			base.AddParameterˡ( parametersˡ, "@LesseeSurrenderSumPayableByLessee", rowˡ.LesseeSurrenderSumPayableByLessee, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@LesseeSurrenderSumPayableByLessor", rowˡ.LesseeSurrenderSumPayableByLessor, sd.SqlDbType.Decimal );
			base.AddParameterˡ( parametersˡ, "@LesseeMakeGoodRequiredIndicator", rowˡ.LesseeMakeGoodRequiredIndicator, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@LesseeLeaseNumber", rowˡ.LesseeLeaseNumber, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@LesseeLeaseDate", rowˡ.LesseeLeaseDate, sd.SqlDbType.DateTime );
			base.AddParameterˡ( parametersˡ, "@LesseeSendDocsTo", rowˡ.LesseeSendDocsTo, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@UpdateUserCode", rowˡ.UpdateUserCode, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@UpdateDateTime", rowˡ.UpdateDateTime, sd.SqlDbType.DateTime );
			base.AddParameterˡ( parametersˡ, "@RowTimestamp", rowˡ.RowTimestamp, sd.SqlDbType.Image );
			base.AddParameterˡ( parametersˡ, "@TenantTradingName", rowˡ.TenantTradingName, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@LesseeTradingName", rowˡ.LesseeTradingName, sd.SqlDbType.NText );
			base.AddParameterˡ( parametersˡ, "@LesseeLiableLegalFeesIndicator", rowˡ.LesseeLiableLegalFeesIndicator, sd.SqlDbType.NText );

			int? identityIDˡ = null ;
			object objˡ = null ;
		 
			acr.SaveEnum saveResultˡ ;
		 
			if ( saveStrategyˡ != acr.CodeGenSaveStrategy.Normal )
			{
				saveResultˡ = base.ExecuteForceSaveˡ( rowˡ, connˡ, tranˡ, parametersˡ, saveStrategyˡ, _insertˡ, _insertIdentityˡ, _updateˡ, _deleteˡ, _whereLoadPKˡ, false, identityProvidedˡ, out objˡ ) ;
				if ( objˡ != null )
					identityIDˡ = int.Parse( objˡ.ToString() ) ;
			}
			else
			{
				saveResultˡ = base.ExecuteSaveˡ( rowˡ, connˡ, tranˡ, parametersˡ, _insertˡ, _insertIdentityˡ, _updateˡ, _deleteˡ, _whereSavePKˡ, false, identityProvidedˡ, out objˡ ) ;
				if ( objˡ != null )
					identityIDˡ = int.Parse( objˡ.ToString() ) ;
			}
		 
			if ( saveResultˡ == acr.SaveEnum.Update ) 
				return this.LoadByPrimaryKeyˡ( connˡ, rowˡ.SurrenderDetailID, tranˡ ) ;
			else
			if ( saveResultˡ == acr.SaveEnum.Insert ) 
				return this.LoadByPrimaryKeyˡ( connˡ, rowˡ.SurrenderDetailID, tranˡ ) ;
			else
			if ( saveResultˡ == acr.SaveEnum.Delete )
				return null ;
			else
				return rowˡ ;
		}

		public scg.List<SurrenderDetail> Saveˡ( sds.SqlConnection connˡ, scg.List<SurrenderDetail> rowListˡ, acr.CodeGenSaveStrategy saveStrategyˡ = acr.CodeGenSaveStrategy.Normal,  bool identityProvidedˡ = false, sds.SqlTransaction tranˡ = null )
		{
			scg.List<SurrenderDetail> rowList2ˡ = new scg.List<SurrenderDetail>();
			foreach( SurrenderDetail rowˡ in rowListˡ )
			{
				SurrenderDetail row2ˡ = this.Saveˡ( connˡ, rowˡ, saveStrategyˡ, identityProvidedˡ, tranˡ ) ;
				if ( row2ˡ != null )	rowList2ˡ.Add( row2ˡ ) ;
			}
			return rowList2ˡ ;
		}

		public SurrenderDetail LoadByPrimaryKeyˡ
		(
			sds.SqlConnection connˡ,
			int? SurrenderDetailID,
			sds.SqlTransaction tranˡ = null
		)
		{
			scg.List<sds.SqlParameter> parametersˡ = new scg.List<sds.SqlParameter>();
			base.AddParameterˡ( parametersˡ, "@pk_SurrenderDetailID", SurrenderDetailID );
			return base.ExecuteQueryReturnOneˡ( connˡ, tranˡ, parametersˡ, _assemblyˡ, _selectˡ, false, _whereLoadPKˡ, false ) ;
		}

		public scg.List<SurrenderDetail> Loadˡ
		(
			sds.SqlConnection connˡ,
			int? topNˡ = null,
			scg.List<acr.CodeGenOrderBy> orderByˡ = null,
			sds.SqlTransaction tranˡ = null
		)
		{
			scg.List<sds.SqlParameter> parametersˡ = new scg.List<sds.SqlParameter>();
			string whereˡ = "";
			string sqlˡ = "" ; 
			return base.ExecuteQueryˡ( connˡ, tranˡ, parametersˡ, _assemblyˡ, _selectˡ, false, whereˡ, false, topNˡ, orderByˡ, out sqlˡ ) ;
		}

		public scg.List<SurrenderDetail> LoadByWhereˡ
		(
			sds.SqlConnection connˡ,
			string whereˡ,
			scg.List<sds.SqlParameter> parametersˡ = null,
			int? topNˡ = null,
			scg.List<acr.CodeGenOrderBy> orderByˡ = null,
			sds.SqlTransaction tranˡ = null
		)
		{
			string sqlˡ = "" ; 
			return base.ExecuteQueryˡ( connˡ, tranˡ, parametersˡ, _assemblyˡ, _selectˡ, false, whereˡ, false, topNˡ, orderByˡ, out sqlˡ ) ;
		}

	}

}

