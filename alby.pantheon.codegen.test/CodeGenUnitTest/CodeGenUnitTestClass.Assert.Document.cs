
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;

using nu = NUnit.Framework;
using t = alby.pantheon.codegen.table ;

namespace alby.pantheon.codegen.test
{
	public partial class CodeGenUnitTestClass : acr.CodeGenUnitTestBase
	{
		protected void Assert٠Document( bool insert, t.Document newobj, t.Document oldobj )
		{
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[2/40] Document - assert" ) ;
		 
			nu.Assert.IsNotNull( newobj.DocumentID, "Document.DocumentID" ) ;
			nu.Assert.IsNotNull( newobj.LeaseID, "Document.LeaseID" ) ;
			nu.Assert.IsNotNull( newobj.Description, "Document.Description" ) ;
			nu.Assert.IsNotNull( newobj.Type, "Document.Type" ) ;
			nu.Assert.IsNotNull( newobj.BinaryData, "Document.BinaryData" ) ;
			nu.Assert.IsNotNull( newobj.UpdateUserCode, "Document.UpdateUserCode" ) ;
			nu.Assert.IsNotNull( newobj.UpdateDateTime, "Document.UpdateDateTime" ) ;
			nu.Assert.IsNotNull( newobj.RowTimestamp, "Document.RowTimestamp" ) ;
		 
			base.AssertAreEqual( newobj.DocumentID, oldobj.DocumentID, "Document.DocumentID" ) ;
			base.AssertAreEqual( newobj.LeaseID, oldobj.LeaseID, "Document.LeaseID" ) ;
			base.AssertAreEqual( newobj.Description, oldobj.Description, "Document.Description" ) ;
			base.AssertAreEqual( newobj.Type, oldobj.Type, "Document.Type" ) ;
			base.AssertAreEqual( newobj.BinaryData, oldobj.BinaryData, "Document.BinaryData" ) ;
			base.AssertAreEqual( newobj.UpdateUserCode, oldobj.UpdateUserCode, "Document.UpdateUserCode" ) ;
			base.AssertAreEqual( newobj.UpdateDateTime, oldobj.UpdateDateTime, "Document.UpdateDateTime" ) ;
		 
		}
	}

}

