
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;

using nu = NUnit.Framework;
using t = alby.pantheon.codegen.table ;

namespace alby.pantheon.codegen.test
{
	public partial class CodeGenUnitTestClass : acr.CodeGenUnitTestBase
	{
		protected void Assert٠Party( bool insert, t.Party newobj, t.Party oldobj )
		{
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[11/40] Party - assert" ) ;
		 
			nu.Assert.IsNotNull( newobj.PartyID, "Party.PartyID" ) ;
			nu.Assert.IsNotNull( newobj.Salutation, "Party.Salutation" ) ;
			nu.Assert.IsNotNull( newobj.GivenName, "Party.GivenName" ) ;
			nu.Assert.IsNotNull( newobj.FamilyName, "Party.FamilyName" ) ;
			nu.Assert.IsNotNull( newobj.Name, "Party.Name" ) ;
			nu.Assert.IsNotNull( newobj.UpdateUserCode, "Party.UpdateUserCode" ) ;
			nu.Assert.IsNotNull( newobj.UpdateDateTime, "Party.UpdateDateTime" ) ;
			nu.Assert.IsNotNull( newobj.RowTimestamp, "Party.RowTimestamp" ) ;
		 
			base.AssertAreEqual( newobj.PartyID, oldobj.PartyID, "Party.PartyID" ) ;
			base.AssertAreEqual( newobj.Salutation, oldobj.Salutation, "Party.Salutation" ) ;
			base.AssertAreEqual( newobj.GivenName, oldobj.GivenName, "Party.GivenName" ) ;
			base.AssertAreEqual( newobj.FamilyName, oldobj.FamilyName, "Party.FamilyName" ) ;
			base.AssertAreEqual( newobj.Name, oldobj.Name, "Party.Name" ) ;
			base.AssertAreEqual( newobj.UpdateUserCode, oldobj.UpdateUserCode, "Party.UpdateUserCode" ) ;
			base.AssertAreEqual( newobj.UpdateDateTime, oldobj.UpdateDateTime, "Party.UpdateDateTime" ) ;
		 
		}
	}

}

