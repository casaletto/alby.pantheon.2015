
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;

using nu = NUnit.Framework;
using t = alby.pantheon.codegen.table ;

namespace alby.pantheon.codegen.test
{
	public partial class CodeGenUnitTestClass : acr.CodeGenUnitTestBase
	{
		protected void Assert٠Address( bool insert, t.Address newobj, t.Address oldobj )
		{
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[22/40] Address - assert" ) ;
		 
			nu.Assert.IsNotNull( newobj.AddressID, "Address.AddressID" ) ;
			nu.Assert.IsNotNull( newobj.PartyID, "Address.PartyID" ) ;
			nu.Assert.IsNotNull( newobj.AddressType, "Address.AddressType" ) ;
			nu.Assert.IsNotNull( newobj.AddressLine1, "Address.AddressLine1" ) ;
			nu.Assert.IsNotNull( newobj.AddressLine2, "Address.AddressLine2" ) ;
			nu.Assert.IsNotNull( newobj.Suburb, "Address.Suburb" ) ;
			nu.Assert.IsNotNull( newobj.Town, "Address.Town" ) ;
			nu.Assert.IsNotNull( newobj.State, "Address.State" ) ;
			nu.Assert.IsNotNull( newobj.Postcode, "Address.Postcode" ) ;
			nu.Assert.IsNotNull( newobj.Country, "Address.Country" ) ;
			nu.Assert.IsNotNull( newobj.UpdateUserCode, "Address.UpdateUserCode" ) ;
			nu.Assert.IsNotNull( newobj.UpdateDateTime, "Address.UpdateDateTime" ) ;
			nu.Assert.IsNotNull( newobj.RowTimestamp, "Address.RowTimestamp" ) ;
		 
			base.AssertAreEqual( newobj.AddressID, oldobj.AddressID, "Address.AddressID" ) ;
			base.AssertAreEqual( newobj.PartyID, oldobj.PartyID, "Address.PartyID" ) ;
			base.AssertAreEqual( newobj.AddressType, oldobj.AddressType, "Address.AddressType" ) ;
			base.AssertAreEqual( newobj.AddressLine1, oldobj.AddressLine1, "Address.AddressLine1" ) ;
			base.AssertAreEqual( newobj.AddressLine2, oldobj.AddressLine2, "Address.AddressLine2" ) ;
			base.AssertAreEqual( newobj.Suburb, oldobj.Suburb, "Address.Suburb" ) ;
			base.AssertAreEqual( newobj.Town, oldobj.Town, "Address.Town" ) ;
			base.AssertAreEqual( newobj.State, oldobj.State, "Address.State" ) ;
			base.AssertAreEqual( newobj.Postcode, oldobj.Postcode, "Address.Postcode" ) ;
			base.AssertAreEqual( newobj.Country, oldobj.Country, "Address.Country" ) ;
			base.AssertAreEqual( newobj.UpdateUserCode, oldobj.UpdateUserCode, "Address.UpdateUserCode" ) ;
			base.AssertAreEqual( newobj.UpdateDateTime, oldobj.UpdateDateTime, "Address.UpdateDateTime" ) ;
		 
		}
	}

}

