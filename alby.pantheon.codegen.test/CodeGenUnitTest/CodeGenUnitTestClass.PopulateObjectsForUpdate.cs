
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;

using nu = NUnit.Framework;
using t = alby.pantheon.codegen.table ;

namespace alby.pantheon.codegen.test
{
	public partial class CodeGenUnitTestClass : acr.CodeGenUnitTestBase
	{
		protected void PopulateObjectsForUpdate()
		{
			// Chain
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[1/40] Chain - update" ) ;
			this.Populate٠Chain( false, obj1٠Chain ) ;
			this.PopulateOverride٠Chain( false, obj1٠Chain ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Chain ) ;
			obj2٠Chain = factory٠ChainFactory.Saveˡ( _connection, obj1٠Chain ) ;
			nu.Assert.IsNotNull( obj2٠Chain ) ;
			base.AssertFlagsObjectLoaded( obj2٠Chain ) ;
			base.AssertFlagsAfterUpdate( obj1٠Chain ) ;
			rowcount2٠Chain = factory٠ChainFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Chain, rowcount1٠Chain ) ;
			 
			// Document
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[2/40] Document - update" ) ;
			this.Populate٠Document( false, obj1٠Document ) ;
			this.PopulateOverride٠Document( false, obj1٠Document ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Document ) ;
			obj2٠Document = factory٠DocumentFactory.Saveˡ( _connection, obj1٠Document ) ;
			nu.Assert.IsNotNull( obj2٠Document ) ;
			base.AssertFlagsObjectLoaded( obj2٠Document ) ;
			base.AssertFlagsAfterUpdate( obj1٠Document ) ;
			rowcount2٠Document = factory٠DocumentFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Document, rowcount1٠Document ) ;
			 
			// dtproperties
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[3/40] dtproperties - update" ) ;
			this.Populate٠dtproperties( false, obj1٠dtproperties ) ;
			this.PopulateOverride٠dtproperties( false, obj1٠dtproperties ) ;
			base.AssertFlagsBeforeUpdate( obj1٠dtproperties ) ;
			obj2٠dtproperties = factory٠dtpropertiesFactory.Saveˡ( _connection, obj1٠dtproperties ) ;
			nu.Assert.IsNotNull( obj2٠dtproperties ) ;
			base.AssertFlagsObjectLoaded( obj2٠dtproperties ) ;
			base.AssertFlagsAfterUpdate( obj1٠dtproperties ) ;
			rowcount2٠dtproperties = factory٠dtpropertiesFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠dtproperties, rowcount1٠dtproperties ) ;
			 
			// Email
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[4/40] Email - update" ) ;
			this.Populate٠Email( false, obj1٠Email ) ;
			this.PopulateOverride٠Email( false, obj1٠Email ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Email ) ;
			obj2٠Email = factory٠EmailFactory.Saveˡ( _connection, obj1٠Email ) ;
			nu.Assert.IsNotNull( obj2٠Email ) ;
			base.AssertFlagsObjectLoaded( obj2٠Email ) ;
			base.AssertFlagsAfterUpdate( obj1٠Email ) ;
			rowcount2٠Email = factory٠EmailFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Email, rowcount1٠Email ) ;
			 
			// ExpenseDetail
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[5/40] ExpenseDetail - update" ) ;
			this.Populate٠ExpenseDetail( false, obj1٠ExpenseDetail ) ;
			this.PopulateOverride٠ExpenseDetail( false, obj1٠ExpenseDetail ) ;
			base.AssertFlagsBeforeUpdate( obj1٠ExpenseDetail ) ;
			obj2٠ExpenseDetail = factory٠ExpenseDetailFactory.Saveˡ( _connection, obj1٠ExpenseDetail ) ;
			nu.Assert.IsNotNull( obj2٠ExpenseDetail ) ;
			base.AssertFlagsObjectLoaded( obj2٠ExpenseDetail ) ;
			base.AssertFlagsAfterUpdate( obj1٠ExpenseDetail ) ;
			rowcount2٠ExpenseDetail = factory٠ExpenseDetailFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠ExpenseDetail, rowcount1٠ExpenseDetail ) ;
			 
			// FitoutDetail
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[6/40] FitoutDetail - update" ) ;
			this.Populate٠FitoutDetail( false, obj1٠FitoutDetail ) ;
			this.PopulateOverride٠FitoutDetail( false, obj1٠FitoutDetail ) ;
			base.AssertFlagsBeforeUpdate( obj1٠FitoutDetail ) ;
			obj2٠FitoutDetail = factory٠FitoutDetailFactory.Saveˡ( _connection, obj1٠FitoutDetail ) ;
			nu.Assert.IsNotNull( obj2٠FitoutDetail ) ;
			base.AssertFlagsObjectLoaded( obj2٠FitoutDetail ) ;
			base.AssertFlagsAfterUpdate( obj1٠FitoutDetail ) ;
			rowcount2٠FitoutDetail = factory٠FitoutDetailFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠FitoutDetail, rowcount1٠FitoutDetail ) ;
			 
			// IDGenerator
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[7/40] IDGenerator - update" ) ;
			this.Populate٠IDGenerator( false, obj1٠IDGenerator ) ;
			this.PopulateOverride٠IDGenerator( false, obj1٠IDGenerator ) ;
			base.AssertFlagsBeforeUpdate( obj1٠IDGenerator ) ;
			obj2٠IDGenerator = factory٠IDGeneratorFactory.Saveˡ( _connection, obj1٠IDGenerator ) ;
			nu.Assert.IsNotNull( obj2٠IDGenerator ) ;
			base.AssertFlagsObjectLoaded( obj2٠IDGenerator ) ;
			base.AssertFlagsAfterUpdate( obj1٠IDGenerator ) ;
			rowcount2٠IDGenerator = factory٠IDGeneratorFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠IDGenerator, rowcount1٠IDGenerator ) ;
			 
			// LeaseComment
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[8/40] LeaseComment - update" ) ;
			this.Populate٠LeaseComment( false, obj1٠LeaseComment ) ;
			this.PopulateOverride٠LeaseComment( false, obj1٠LeaseComment ) ;
			base.AssertFlagsBeforeUpdate( obj1٠LeaseComment ) ;
			obj2٠LeaseComment = factory٠LeaseCommentFactory.Saveˡ( _connection, obj1٠LeaseComment ) ;
			nu.Assert.IsNotNull( obj2٠LeaseComment ) ;
			base.AssertFlagsObjectLoaded( obj2٠LeaseComment ) ;
			base.AssertFlagsAfterUpdate( obj1٠LeaseComment ) ;
			rowcount2٠LeaseComment = factory٠LeaseCommentFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠LeaseComment, rowcount1٠LeaseComment ) ;
			 
			// LeaseCondition
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[9/40] LeaseCondition - update" ) ;
			this.Populate٠LeaseCondition( false, obj1٠LeaseCondition ) ;
			this.PopulateOverride٠LeaseCondition( false, obj1٠LeaseCondition ) ;
			base.AssertFlagsBeforeUpdate( obj1٠LeaseCondition ) ;
			obj2٠LeaseCondition = factory٠LeaseConditionFactory.Saveˡ( _connection, obj1٠LeaseCondition ) ;
			nu.Assert.IsNotNull( obj2٠LeaseCondition ) ;
			base.AssertFlagsObjectLoaded( obj2٠LeaseCondition ) ;
			base.AssertFlagsAfterUpdate( obj1٠LeaseCondition ) ;
			rowcount2٠LeaseCondition = factory٠LeaseConditionFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠LeaseCondition, rowcount1٠LeaseCondition ) ;
			 
			// LeaseType
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[10/40] LeaseType - update" ) ;
			this.Populate٠LeaseType( false, obj1٠LeaseType ) ;
			this.PopulateOverride٠LeaseType( false, obj1٠LeaseType ) ;
			base.AssertFlagsBeforeUpdate( obj1٠LeaseType ) ;
			obj2٠LeaseType = factory٠LeaseTypeFactory.Saveˡ( _connection, obj1٠LeaseType ) ;
			nu.Assert.IsNotNull( obj2٠LeaseType ) ;
			base.AssertFlagsObjectLoaded( obj2٠LeaseType ) ;
			base.AssertFlagsAfterUpdate( obj1٠LeaseType ) ;
			rowcount2٠LeaseType = factory٠LeaseTypeFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠LeaseType, rowcount1٠LeaseType ) ;
			 
			// Party
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[11/40] Party - update" ) ;
			this.Populate٠Party( false, obj1٠Party ) ;
			this.PopulateOverride٠Party( false, obj1٠Party ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Party ) ;
			obj2٠Party = factory٠PartyFactory.Saveˡ( _connection, obj1٠Party ) ;
			nu.Assert.IsNotNull( obj2٠Party ) ;
			base.AssertFlagsObjectLoaded( obj2٠Party ) ;
			base.AssertFlagsAfterUpdate( obj1٠Party ) ;
			rowcount2٠Party = factory٠PartyFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Party, rowcount1٠Party ) ;
			 
			// PaymentType
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[12/40] PaymentType - update" ) ;
			this.Populate٠PaymentType( false, obj1٠PaymentType ) ;
			this.PopulateOverride٠PaymentType( false, obj1٠PaymentType ) ;
			base.AssertFlagsBeforeUpdate( obj1٠PaymentType ) ;
			obj2٠PaymentType = factory٠PaymentTypeFactory.Saveˡ( _connection, obj1٠PaymentType ) ;
			nu.Assert.IsNotNull( obj2٠PaymentType ) ;
			base.AssertFlagsObjectLoaded( obj2٠PaymentType ) ;
			base.AssertFlagsAfterUpdate( obj1٠PaymentType ) ;
			rowcount2٠PaymentType = factory٠PaymentTypeFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠PaymentType, rowcount1٠PaymentType ) ;
			 
			// Precinct
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[13/40] Precinct - update" ) ;
			this.Populate٠Precinct( false, obj1٠Precinct ) ;
			this.PopulateOverride٠Precinct( false, obj1٠Precinct ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Precinct ) ;
			obj2٠Precinct = factory٠PrecinctFactory.Saveˡ( _connection, obj1٠Precinct ) ;
			nu.Assert.IsNotNull( obj2٠Precinct ) ;
			base.AssertFlagsObjectLoaded( obj2٠Precinct ) ;
			base.AssertFlagsAfterUpdate( obj1٠Precinct ) ;
			rowcount2٠Precinct = factory٠PrecinctFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Precinct, rowcount1٠Precinct ) ;
			 
			// RDMFeeParam
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[14/40] RDMFeeParam - update" ) ;
			this.Populate٠RDMFeeParam( false, obj1٠RDMFeeParam ) ;
			this.PopulateOverride٠RDMFeeParam( false, obj1٠RDMFeeParam ) ;
			base.AssertFlagsBeforeUpdate( obj1٠RDMFeeParam ) ;
			obj2٠RDMFeeParam = factory٠RDMFeeParamFactory.Saveˡ( _connection, obj1٠RDMFeeParam ) ;
			nu.Assert.IsNotNull( obj2٠RDMFeeParam ) ;
			base.AssertFlagsObjectLoaded( obj2٠RDMFeeParam ) ;
			base.AssertFlagsAfterUpdate( obj1٠RDMFeeParam ) ;
			rowcount2٠RDMFeeParam = factory٠RDMFeeParamFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠RDMFeeParam, rowcount1٠RDMFeeParam ) ;
			 
			// RentReviewType
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[15/40] RentReviewType - update" ) ;
			this.Populate٠RentReviewType( false, obj1٠RentReviewType ) ;
			this.PopulateOverride٠RentReviewType( false, obj1٠RentReviewType ) ;
			base.AssertFlagsBeforeUpdate( obj1٠RentReviewType ) ;
			obj2٠RentReviewType = factory٠RentReviewTypeFactory.Saveˡ( _connection, obj1٠RentReviewType ) ;
			nu.Assert.IsNotNull( obj2٠RentReviewType ) ;
			base.AssertFlagsObjectLoaded( obj2٠RentReviewType ) ;
			base.AssertFlagsAfterUpdate( obj1٠RentReviewType ) ;
			rowcount2٠RentReviewType = factory٠RentReviewTypeFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠RentReviewType, rowcount1٠RentReviewType ) ;
			 
			// SalesCategory
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[16/40] SalesCategory - update" ) ;
			this.Populate٠SalesCategory( false, obj1٠SalesCategory ) ;
			this.PopulateOverride٠SalesCategory( false, obj1٠SalesCategory ) ;
			base.AssertFlagsBeforeUpdate( obj1٠SalesCategory ) ;
			obj2٠SalesCategory = factory٠SalesCategoryFactory.Saveˡ( _connection, obj1٠SalesCategory ) ;
			nu.Assert.IsNotNull( obj2٠SalesCategory ) ;
			base.AssertFlagsObjectLoaded( obj2٠SalesCategory ) ;
			base.AssertFlagsAfterUpdate( obj1٠SalesCategory ) ;
			rowcount2٠SalesCategory = factory٠SalesCategoryFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠SalesCategory, rowcount1٠SalesCategory ) ;
			 
			// Sector
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[17/40] Sector - update" ) ;
			this.Populate٠Sector( false, obj1٠Sector ) ;
			this.PopulateOverride٠Sector( false, obj1٠Sector ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Sector ) ;
			obj2٠Sector = factory٠SectorFactory.Saveˡ( _connection, obj1٠Sector ) ;
			nu.Assert.IsNotNull( obj2٠Sector ) ;
			base.AssertFlagsObjectLoaded( obj2٠Sector ) ;
			base.AssertFlagsAfterUpdate( obj1٠Sector ) ;
			rowcount2٠Sector = factory٠SectorFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Sector, rowcount1٠Sector ) ;
			 
			// ShopType
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[18/40] ShopType - update" ) ;
			this.Populate٠ShopType( false, obj1٠ShopType ) ;
			this.PopulateOverride٠ShopType( false, obj1٠ShopType ) ;
			base.AssertFlagsBeforeUpdate( obj1٠ShopType ) ;
			obj2٠ShopType = factory٠ShopTypeFactory.Saveˡ( _connection, obj1٠ShopType ) ;
			nu.Assert.IsNotNull( obj2٠ShopType ) ;
			base.AssertFlagsObjectLoaded( obj2٠ShopType ) ;
			base.AssertFlagsAfterUpdate( obj1٠ShopType ) ;
			rowcount2٠ShopType = factory٠ShopTypeFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠ShopType, rowcount1٠ShopType ) ;
			 
			// SolicitorWebService
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[19/40] SolicitorWebService - update" ) ;
			this.Populate٠SolicitorWebService( false, obj1٠SolicitorWebService ) ;
			this.PopulateOverride٠SolicitorWebService( false, obj1٠SolicitorWebService ) ;
			base.AssertFlagsBeforeUpdate( obj1٠SolicitorWebService ) ;
			obj2٠SolicitorWebService = factory٠SolicitorWebServiceFactory.Saveˡ( _connection, obj1٠SolicitorWebService ) ;
			nu.Assert.IsNotNull( obj2٠SolicitorWebService ) ;
			base.AssertFlagsObjectLoaded( obj2٠SolicitorWebService ) ;
			base.AssertFlagsAfterUpdate( obj1٠SolicitorWebService ) ;
			rowcount2٠SolicitorWebService = factory٠SolicitorWebServiceFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠SolicitorWebService, rowcount1٠SolicitorWebService ) ;
			 
			// SurrenderDetail
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[20/40] SurrenderDetail - update" ) ;
			this.Populate٠SurrenderDetail( false, obj1٠SurrenderDetail ) ;
			this.PopulateOverride٠SurrenderDetail( false, obj1٠SurrenderDetail ) ;
			base.AssertFlagsBeforeUpdate( obj1٠SurrenderDetail ) ;
			obj2٠SurrenderDetail = factory٠SurrenderDetailFactory.Saveˡ( _connection, obj1٠SurrenderDetail ) ;
			nu.Assert.IsNotNull( obj2٠SurrenderDetail ) ;
			base.AssertFlagsObjectLoaded( obj2٠SurrenderDetail ) ;
			base.AssertFlagsAfterUpdate( obj1٠SurrenderDetail ) ;
			rowcount2٠SurrenderDetail = factory٠SurrenderDetailFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠SurrenderDetail, rowcount1٠SurrenderDetail ) ;
			 
			// VacantPossessionDetail
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[21/40] VacantPossessionDetail - update" ) ;
			this.Populate٠VacantPossessionDetail( false, obj1٠VacantPossessionDetail ) ;
			this.PopulateOverride٠VacantPossessionDetail( false, obj1٠VacantPossessionDetail ) ;
			base.AssertFlagsBeforeUpdate( obj1٠VacantPossessionDetail ) ;
			obj2٠VacantPossessionDetail = factory٠VacantPossessionDetailFactory.Saveˡ( _connection, obj1٠VacantPossessionDetail ) ;
			nu.Assert.IsNotNull( obj2٠VacantPossessionDetail ) ;
			base.AssertFlagsObjectLoaded( obj2٠VacantPossessionDetail ) ;
			base.AssertFlagsAfterUpdate( obj1٠VacantPossessionDetail ) ;
			rowcount2٠VacantPossessionDetail = factory٠VacantPossessionDetailFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠VacantPossessionDetail, rowcount1٠VacantPossessionDetail ) ;
			 
			// Address
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[22/40] Address - update" ) ;
			this.Populate٠Address( false, obj1٠Address ) ;
			this.PopulateOverride٠Address( false, obj1٠Address ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Address ) ;
			obj2٠Address = factory٠AddressFactory.Saveˡ( _connection, obj1٠Address ) ;
			nu.Assert.IsNotNull( obj2٠Address ) ;
			base.AssertFlagsObjectLoaded( obj2٠Address ) ;
			base.AssertFlagsAfterUpdate( obj1٠Address ) ;
			rowcount2٠Address = factory٠AddressFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Address, rowcount1٠Address ) ;
			 
			// Centre
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[23/40] Centre - update" ) ;
			this.Populate٠Centre( false, obj1٠Centre ) ;
			this.PopulateOverride٠Centre( false, obj1٠Centre ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Centre ) ;
			obj2٠Centre = factory٠CentreFactory.Saveˡ( _connection, obj1٠Centre ) ;
			nu.Assert.IsNotNull( obj2٠Centre ) ;
			base.AssertFlagsObjectLoaded( obj2٠Centre ) ;
			base.AssertFlagsAfterUpdate( obj1٠Centre ) ;
			rowcount2٠Centre = factory٠CentreFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Centre, rowcount1٠Centre ) ;
			 
			// Communication
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[24/40] Communication - update" ) ;
			this.Populate٠Communication( false, obj1٠Communication ) ;
			this.PopulateOverride٠Communication( false, obj1٠Communication ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Communication ) ;
			obj2٠Communication = factory٠CommunicationFactory.Saveˡ( _connection, obj1٠Communication ) ;
			nu.Assert.IsNotNull( obj2٠Communication ) ;
			base.AssertFlagsObjectLoaded( obj2٠Communication ) ;
			base.AssertFlagsAfterUpdate( obj1٠Communication ) ;
			rowcount2٠Communication = factory٠CommunicationFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Communication, rowcount1٠Communication ) ;
			 
			// CostCentreStage
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[25/40] CostCentreStage - update" ) ;
			this.Populate٠CostCentreStage( false, obj1٠CostCentreStage ) ;
			this.PopulateOverride٠CostCentreStage( false, obj1٠CostCentreStage ) ;
			base.AssertFlagsBeforeUpdate( obj1٠CostCentreStage ) ;
			obj2٠CostCentreStage = factory٠CostCentreStageFactory.Saveˡ( _connection, obj1٠CostCentreStage ) ;
			nu.Assert.IsNotNull( obj2٠CostCentreStage ) ;
			base.AssertFlagsObjectLoaded( obj2٠CostCentreStage ) ;
			base.AssertFlagsAfterUpdate( obj1٠CostCentreStage ) ;
			rowcount2٠CostCentreStage = factory٠CostCentreStageFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠CostCentreStage, rowcount1٠CostCentreStage ) ;
			 
			// CostCentreOutgoing
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[26/40] CostCentreOutgoing - update" ) ;
			this.Populate٠CostCentreOutgoing( false, obj1٠CostCentreOutgoing ) ;
			this.PopulateOverride٠CostCentreOutgoing( false, obj1٠CostCentreOutgoing ) ;
			base.AssertFlagsBeforeUpdate( obj1٠CostCentreOutgoing ) ;
			obj2٠CostCentreOutgoing = factory٠CostCentreOutgoingFactory.Saveˡ( _connection, obj1٠CostCentreOutgoing ) ;
			nu.Assert.IsNotNull( obj2٠CostCentreOutgoing ) ;
			base.AssertFlagsObjectLoaded( obj2٠CostCentreOutgoing ) ;
			base.AssertFlagsAfterUpdate( obj1٠CostCentreOutgoing ) ;
			rowcount2٠CostCentreOutgoing = factory٠CostCentreOutgoingFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠CostCentreOutgoing, rowcount1٠CostCentreOutgoing ) ;
			 
			// CostCentreOutgoingArchive
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[27/40] CostCentreOutgoingArchive - update" ) ;
			this.Populate٠CostCentreOutgoingArchive( false, obj1٠CostCentreOutgoingArchive ) ;
			this.PopulateOverride٠CostCentreOutgoingArchive( false, obj1٠CostCentreOutgoingArchive ) ;
			base.AssertFlagsBeforeUpdate( obj1٠CostCentreOutgoingArchive ) ;
			obj2٠CostCentreOutgoingArchive = factory٠CostCentreOutgoingArchiveFactory.Saveˡ( _connection, obj1٠CostCentreOutgoingArchive ) ;
			nu.Assert.IsNotNull( obj2٠CostCentreOutgoingArchive ) ;
			base.AssertFlagsObjectLoaded( obj2٠CostCentreOutgoingArchive ) ;
			base.AssertFlagsAfterUpdate( obj1٠CostCentreOutgoingArchive ) ;
			rowcount2٠CostCentreOutgoingArchive = factory٠CostCentreOutgoingArchiveFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠CostCentreOutgoingArchive, rowcount1٠CostCentreOutgoingArchive ) ;
			 
			// Franchise
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[28/40] Franchise - update" ) ;
			this.Populate٠Franchise( false, obj1٠Franchise ) ;
			this.PopulateOverride٠Franchise( false, obj1٠Franchise ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Franchise ) ;
			obj2٠Franchise = factory٠FranchiseFactory.Saveˡ( _connection, obj1٠Franchise ) ;
			nu.Assert.IsNotNull( obj2٠Franchise ) ;
			base.AssertFlagsObjectLoaded( obj2٠Franchise ) ;
			base.AssertFlagsAfterUpdate( obj1٠Franchise ) ;
			rowcount2٠Franchise = factory٠FranchiseFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Franchise, rowcount1٠Franchise ) ;
			 
			// LeaseExecutive
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[29/40] LeaseExecutive - update" ) ;
			this.Populate٠LeaseExecutive( false, obj1٠LeaseExecutive ) ;
			this.PopulateOverride٠LeaseExecutive( false, obj1٠LeaseExecutive ) ;
			base.AssertFlagsBeforeUpdate( obj1٠LeaseExecutive ) ;
			obj2٠LeaseExecutive = factory٠LeaseExecutiveFactory.Saveˡ( _connection, obj1٠LeaseExecutive ) ;
			nu.Assert.IsNotNull( obj2٠LeaseExecutive ) ;
			base.AssertFlagsObjectLoaded( obj2٠LeaseExecutive ) ;
			base.AssertFlagsAfterUpdate( obj1٠LeaseExecutive ) ;
			rowcount2٠LeaseExecutive = factory٠LeaseExecutiveFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠LeaseExecutive, rowcount1٠LeaseExecutive ) ;
			 
			// Lessee
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[30/40] Lessee - update" ) ;
			this.Populate٠Lessee( false, obj1٠Lessee ) ;
			this.PopulateOverride٠Lessee( false, obj1٠Lessee ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Lessee ) ;
			obj2٠Lessee = factory٠LesseeFactory.Saveˡ( _connection, obj1٠Lessee ) ;
			nu.Assert.IsNotNull( obj2٠Lessee ) ;
			base.AssertFlagsObjectLoaded( obj2٠Lessee ) ;
			base.AssertFlagsAfterUpdate( obj1٠Lessee ) ;
			rowcount2٠Lessee = factory٠LesseeFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Lessee, rowcount1٠Lessee ) ;
			 
			// RentReview
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[31/40] RentReview - update" ) ;
			this.Populate٠RentReview( false, obj1٠RentReview ) ;
			this.PopulateOverride٠RentReview( false, obj1٠RentReview ) ;
			base.AssertFlagsBeforeUpdate( obj1٠RentReview ) ;
			obj2٠RentReview = factory٠RentReviewFactory.Saveˡ( _connection, obj1٠RentReview ) ;
			nu.Assert.IsNotNull( obj2٠RentReview ) ;
			base.AssertFlagsObjectLoaded( obj2٠RentReview ) ;
			base.AssertFlagsAfterUpdate( obj1٠RentReview ) ;
			rowcount2٠RentReview = factory٠RentReviewFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠RentReview, rowcount1٠RentReview ) ;
			 
			// ConsumerPriceIndexRentReview
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[32/40] ConsumerPriceIndexRentReview - update" ) ;
			this.Populate٠ConsumerPriceIndexRentReview( false, obj1٠ConsumerPriceIndexRentReview ) ;
			this.PopulateOverride٠ConsumerPriceIndexRentReview( false, obj1٠ConsumerPriceIndexRentReview ) ;
			base.AssertFlagsBeforeUpdate( obj1٠ConsumerPriceIndexRentReview ) ;
			obj2٠ConsumerPriceIndexRentReview = factory٠ConsumerPriceIndexRentReviewFactory.Saveˡ( _connection, obj1٠ConsumerPriceIndexRentReview ) ;
			nu.Assert.IsNotNull( obj2٠ConsumerPriceIndexRentReview ) ;
			base.AssertFlagsObjectLoaded( obj2٠ConsumerPriceIndexRentReview ) ;
			base.AssertFlagsAfterUpdate( obj1٠ConsumerPriceIndexRentReview ) ;
			rowcount2٠ConsumerPriceIndexRentReview = factory٠ConsumerPriceIndexRentReviewFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠ConsumerPriceIndexRentReview, rowcount1٠ConsumerPriceIndexRentReview ) ;
			 
			// FixedIncreaseRentReview
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[33/40] FixedIncreaseRentReview - update" ) ;
			this.Populate٠FixedIncreaseRentReview( false, obj1٠FixedIncreaseRentReview ) ;
			this.PopulateOverride٠FixedIncreaseRentReview( false, obj1٠FixedIncreaseRentReview ) ;
			base.AssertFlagsBeforeUpdate( obj1٠FixedIncreaseRentReview ) ;
			obj2٠FixedIncreaseRentReview = factory٠FixedIncreaseRentReviewFactory.Saveˡ( _connection, obj1٠FixedIncreaseRentReview ) ;
			nu.Assert.IsNotNull( obj2٠FixedIncreaseRentReview ) ;
			base.AssertFlagsObjectLoaded( obj2٠FixedIncreaseRentReview ) ;
			base.AssertFlagsAfterUpdate( obj1٠FixedIncreaseRentReview ) ;
			rowcount2٠FixedIncreaseRentReview = factory٠FixedIncreaseRentReviewFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠FixedIncreaseRentReview, rowcount1٠FixedIncreaseRentReview ) ;
			 
			// RentDetail
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[34/40] RentDetail - update" ) ;
			this.Populate٠RentDetail( false, obj1٠RentDetail ) ;
			this.PopulateOverride٠RentDetail( false, obj1٠RentDetail ) ;
			base.AssertFlagsBeforeUpdate( obj1٠RentDetail ) ;
			obj2٠RentDetail = factory٠RentDetailFactory.Saveˡ( _connection, obj1٠RentDetail ) ;
			nu.Assert.IsNotNull( obj2٠RentDetail ) ;
			base.AssertFlagsObjectLoaded( obj2٠RentDetail ) ;
			base.AssertFlagsAfterUpdate( obj1٠RentDetail ) ;
			rowcount2٠RentDetail = factory٠RentDetailFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠RentDetail, rowcount1٠RentDetail ) ;
			 
			// Solicitor
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[35/40] Solicitor - update" ) ;
			this.Populate٠Solicitor( false, obj1٠Solicitor ) ;
			this.PopulateOverride٠Solicitor( false, obj1٠Solicitor ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Solicitor ) ;
			obj2٠Solicitor = factory٠SolicitorFactory.Saveˡ( _connection, obj1٠Solicitor ) ;
			nu.Assert.IsNotNull( obj2٠Solicitor ) ;
			base.AssertFlagsObjectLoaded( obj2٠Solicitor ) ;
			base.AssertFlagsAfterUpdate( obj1٠Solicitor ) ;
			rowcount2٠Solicitor = factory٠SolicitorFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Solicitor, rowcount1٠Solicitor ) ;
			 
			// Staff
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[36/40] Staff - update" ) ;
			this.Populate٠Staff( false, obj1٠Staff ) ;
			this.PopulateOverride٠Staff( false, obj1٠Staff ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Staff ) ;
			obj2٠Staff = factory٠StaffFactory.Saveˡ( _connection, obj1٠Staff ) ;
			nu.Assert.IsNotNull( obj2٠Staff ) ;
			base.AssertFlagsObjectLoaded( obj2٠Staff ) ;
			base.AssertFlagsAfterUpdate( obj1٠Staff ) ;
			rowcount2٠Staff = factory٠StaffFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Staff, rowcount1٠Staff ) ;
			 
			// LeaseAdministration
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[37/40] LeaseAdministration - update" ) ;
			this.Populate٠LeaseAdministration( false, obj1٠LeaseAdministration ) ;
			this.PopulateOverride٠LeaseAdministration( false, obj1٠LeaseAdministration ) ;
			base.AssertFlagsBeforeUpdate( obj1٠LeaseAdministration ) ;
			obj2٠LeaseAdministration = factory٠LeaseAdministrationFactory.Saveˡ( _connection, obj1٠LeaseAdministration ) ;
			nu.Assert.IsNotNull( obj2٠LeaseAdministration ) ;
			base.AssertFlagsObjectLoaded( obj2٠LeaseAdministration ) ;
			base.AssertFlagsAfterUpdate( obj1٠LeaseAdministration ) ;
			rowcount2٠LeaseAdministration = factory٠LeaseAdministrationFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠LeaseAdministration, rowcount1٠LeaseAdministration ) ;
			 
			// Lease
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[38/40] Lease - update" ) ;
			this.Populate٠Lease( false, obj1٠Lease ) ;
			this.PopulateOverride٠Lease( false, obj1٠Lease ) ;
			base.AssertFlagsBeforeUpdate( obj1٠Lease ) ;
			obj2٠Lease = factory٠LeaseFactory.Saveˡ( _connection, obj1٠Lease ) ;
			nu.Assert.IsNotNull( obj2٠Lease ) ;
			base.AssertFlagsObjectLoaded( obj2٠Lease ) ;
			base.AssertFlagsAfterUpdate( obj1٠Lease ) ;
			rowcount2٠Lease = factory٠LeaseFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠Lease, rowcount1٠Lease ) ;
			 
			// LeaseGuarantor
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[39/40] LeaseGuarantor - update" ) ;
			this.Populate٠LeaseGuarantor( false, obj1٠LeaseGuarantor ) ;
			this.PopulateOverride٠LeaseGuarantor( false, obj1٠LeaseGuarantor ) ;
			base.AssertFlagsBeforeUpdate( obj1٠LeaseGuarantor ) ;
			obj2٠LeaseGuarantor = factory٠LeaseGuarantorFactory.Saveˡ( _connection, obj1٠LeaseGuarantor ) ;
			nu.Assert.IsNotNull( obj2٠LeaseGuarantor ) ;
			base.AssertFlagsObjectLoaded( obj2٠LeaseGuarantor ) ;
			base.AssertFlagsAfterUpdate( obj1٠LeaseGuarantor ) ;
			rowcount2٠LeaseGuarantor = factory٠LeaseGuarantorFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠LeaseGuarantor, rowcount1٠LeaseGuarantor ) ;
			 
			// LogEntry
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[40/40] LogEntry - update" ) ;
			this.Populate٠LogEntry( false, obj1٠LogEntry ) ;
			this.PopulateOverride٠LogEntry( false, obj1٠LogEntry ) ;
			base.AssertFlagsBeforeUpdate( obj1٠LogEntry ) ;
			obj2٠LogEntry = factory٠LogEntryFactory.Saveˡ( _connection, obj1٠LogEntry ) ;
			nu.Assert.IsNotNull( obj2٠LogEntry ) ;
			base.AssertFlagsObjectLoaded( obj2٠LogEntry ) ;
			base.AssertFlagsAfterUpdate( obj1٠LogEntry ) ;
			rowcount2٠LogEntry = factory٠LogEntryFactory.GetRowCountˡ( _connection ) ;
			nu.Assert.AreEqual( rowcount2٠LogEntry, rowcount1٠LogEntry ) ;
			 
		}
	}

}

