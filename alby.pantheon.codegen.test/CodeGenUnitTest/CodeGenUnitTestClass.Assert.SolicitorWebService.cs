
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;

using nu = NUnit.Framework;
using t = alby.pantheon.codegen.table ;

namespace alby.pantheon.codegen.test
{
	public partial class CodeGenUnitTestClass : acr.CodeGenUnitTestBase
	{
		protected void Assert٠SolicitorWebService( bool insert, t.SolicitorWebService newobj, t.SolicitorWebService oldobj )
		{
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[19/40] SolicitorWebService - assert" ) ;
		 
			nu.Assert.IsNotNull( newobj.SolicitorWebServiceGUID, "SolicitorWebService.SolicitorWebServiceGUID" ) ;
			nu.Assert.IsNotNull( newobj.Name, "SolicitorWebService.Name" ) ;
			nu.Assert.IsNotNull( newobj.DevUrl, "SolicitorWebService.DevUrl" ) ;
			nu.Assert.IsNotNull( newobj.IntgUrl, "SolicitorWebService.IntgUrl" ) ;
			nu.Assert.IsNotNull( newobj.TestUrl, "SolicitorWebService.TestUrl" ) ;
			nu.Assert.IsNotNull( newobj.StagUrl, "SolicitorWebService.StagUrl" ) ;
			nu.Assert.IsNotNull( newobj.ProdUrl, "SolicitorWebService.ProdUrl" ) ;
			nu.Assert.IsNotNull( newobj.DRUrl, "SolicitorWebService.DRUrl" ) ;
			nu.Assert.IsNotNull( newobj.DevCertFilename, "SolicitorWebService.DevCertFilename" ) ;
			nu.Assert.IsNotNull( newobj.IntgCertFilename, "SolicitorWebService.IntgCertFilename" ) ;
			nu.Assert.IsNotNull( newobj.TestCertFilename, "SolicitorWebService.TestCertFilename" ) ;
			nu.Assert.IsNotNull( newobj.StagCertFilename, "SolicitorWebService.StagCertFilename" ) ;
			nu.Assert.IsNotNull( newobj.ProdCertFilename, "SolicitorWebService.ProdCertFilename" ) ;
			nu.Assert.IsNotNull( newobj.DRCertFilename, "SolicitorWebService.DRCertFilename" ) ;
			nu.Assert.IsNotNull( newobj.UpdateUserCode, "SolicitorWebService.UpdateUserCode" ) ;
			nu.Assert.IsNotNull( newobj.UpdateDateTime, "SolicitorWebService.UpdateDateTime" ) ;
			nu.Assert.IsNotNull( newobj.RowTimestamp, "SolicitorWebService.RowTimestamp" ) ;
		 
			base.AssertAreEqual( newobj.SolicitorWebServiceGUID, oldobj.SolicitorWebServiceGUID, "SolicitorWebService.SolicitorWebServiceGUID" ) ;
			base.AssertAreEqual( newobj.Name, oldobj.Name, "SolicitorWebService.Name" ) ;
			base.AssertAreEqual( newobj.DevUrl, oldobj.DevUrl, "SolicitorWebService.DevUrl" ) ;
			base.AssertAreEqual( newobj.IntgUrl, oldobj.IntgUrl, "SolicitorWebService.IntgUrl" ) ;
			base.AssertAreEqual( newobj.TestUrl, oldobj.TestUrl, "SolicitorWebService.TestUrl" ) ;
			base.AssertAreEqual( newobj.StagUrl, oldobj.StagUrl, "SolicitorWebService.StagUrl" ) ;
			base.AssertAreEqual( newobj.ProdUrl, oldobj.ProdUrl, "SolicitorWebService.ProdUrl" ) ;
			base.AssertAreEqual( newobj.DRUrl, oldobj.DRUrl, "SolicitorWebService.DRUrl" ) ;
			base.AssertAreEqual( newobj.DevCertFilename, oldobj.DevCertFilename, "SolicitorWebService.DevCertFilename" ) ;
			base.AssertAreEqual( newobj.IntgCertFilename, oldobj.IntgCertFilename, "SolicitorWebService.IntgCertFilename" ) ;
			base.AssertAreEqual( newobj.TestCertFilename, oldobj.TestCertFilename, "SolicitorWebService.TestCertFilename" ) ;
			base.AssertAreEqual( newobj.StagCertFilename, oldobj.StagCertFilename, "SolicitorWebService.StagCertFilename" ) ;
			base.AssertAreEqual( newobj.ProdCertFilename, oldobj.ProdCertFilename, "SolicitorWebService.ProdCertFilename" ) ;
			base.AssertAreEqual( newobj.DRCertFilename, oldobj.DRCertFilename, "SolicitorWebService.DRCertFilename" ) ;
			base.AssertAreEqual( newobj.UpdateUserCode, oldobj.UpdateUserCode, "SolicitorWebService.UpdateUserCode" ) ;
			base.AssertAreEqual( newobj.UpdateDateTime, oldobj.UpdateDateTime, "SolicitorWebService.UpdateDateTime" ) ;
		 
		}
	}

}

