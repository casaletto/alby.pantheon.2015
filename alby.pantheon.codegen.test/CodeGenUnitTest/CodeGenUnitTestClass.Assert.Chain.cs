
// This file was automatically generated by the code gen tool - do not modify.

using System ;
using scg = System.Collections.Generic ;
using sd = System.Data ;
using sds = System.Data.SqlClient ;
using sr = System.Reflection ;
using mst = Microsoft.SqlServer.Types ;
using mss = Microsoft.SqlServer.Server ;
using acr = alby.codegen.runtime ;

using nu = NUnit.Framework;
using t = alby.pantheon.codegen.table ;

namespace alby.pantheon.codegen.test
{
	public partial class CodeGenUnitTestClass : acr.CodeGenUnitTestBase
	{
		protected void Assert٠Chain( bool insert, t.Chain newobj, t.Chain oldobj )
		{
			acr.CodeGenEtc.ConsoleMessage( ! this.QuietMode, "[1/40] Chain - assert" ) ;
		 
			nu.Assert.IsNotNull( newobj.ChainID, "Chain.ChainID" ) ;
			nu.Assert.IsNotNull( newobj.ChainCode, "Chain.ChainCode" ) ;
			nu.Assert.IsNotNull( newobj.ChainDescription, "Chain.ChainDescription" ) ;
			nu.Assert.IsNotNull( newobj.UpdateUserCode, "Chain.UpdateUserCode" ) ;
			nu.Assert.IsNotNull( newobj.UpdateDateTime, "Chain.UpdateDateTime" ) ;
			nu.Assert.IsNotNull( newobj.RowTimestamp, "Chain.RowTimestamp" ) ;
			nu.Assert.IsNotNull( newobj.DeletionIndicator, "Chain.DeletionIndicator" ) ;
		 
			base.AssertAreEqual( newobj.ChainID, oldobj.ChainID, "Chain.ChainID" ) ;
			base.AssertAreEqual( newobj.ChainCode, oldobj.ChainCode, "Chain.ChainCode" ) ;
			base.AssertAreEqual( newobj.ChainDescription, oldobj.ChainDescription, "Chain.ChainDescription" ) ;
			base.AssertAreEqual( newobj.UpdateUserCode, oldobj.UpdateUserCode, "Chain.UpdateUserCode" ) ;
			base.AssertAreEqual( newobj.UpdateDateTime, oldobj.UpdateDateTime, "Chain.UpdateDateTime" ) ;
			base.AssertAreEqual( newobj.DeletionIndicator, oldobj.DeletionIndicator, "Chain.DeletionIndicator" ) ;
		 
		}
	}

}

